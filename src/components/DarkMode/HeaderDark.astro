---
const navItems = [
  { label: "About Me", href: "#sobre-mi" },
  { label: "Education", href: "#education" },
  { label: "Proyects", href: "#proyects" },
  { label: "Contact", href: "#contact" },
  { label: "CV", href: "./CV.pdf", download: true },
];

import "@fontsource/k2d";
---

<header class="header">
  <nav class="nav">
    <ul class="nav-list">
      {
        navItems.map((item) => (
          <li class="nav-item">
            <a
              href={item.href}
              class="nav-link"
              {...(item.download ? { download: "Alegria-CV.pdf" } : {})}
            >
              {item.label}
            </a>
          </li>
        ))
      }
    </ul>

    <div class="nav-controls">
      <div class="container">
        <a href="/" class="toggle" aria-label="Cambiar a modo claro">
          <div class="icon icon--sun">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="currentColor"
              width="32"
              height="32"
            >
              <path
                d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z"
              ></path>
            </svg>
          </div>
        </a>
      </div>
    </div>
  </nav>
</header>

<style>
  /* Header base */
  .header {
    background: #383838;
    backdrop-filter: blur(10px);
    padding: 1.5rem 2rem;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1000;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    font-family: "K2D", sans-serif;
  }

  .nav {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .nav-list {
    display: flex;
    gap: 3rem;
    list-style: none;
  }

  .nav-item {
    position: relative;
  }

  .nav-link {
    color: whitesmoke;
    text-decoration: none;
    font-size: 1rem;
    font-weight: 500;
    transition: color 0.3s ease;
    padding: 0.5rem 0;
  }

  .nav-link:hover {
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    color: transparent;
  }

  .nav-link::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    transition: width 0.3s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  /* Nav Controls Container */
  .nav-controls {
    display: flex;
    align-items: center;
    gap: 1.5rem;
  }

  .toggle {
    background-color: #282828;
    width: 52px;
    height: 52px;
    border-radius: 50%;
    display: grid;
    place-items: center;
    cursor: pointer;
    box-shadow: 0 0 50px 20px rgba(255, 255, 255, 0.3);
    line-height: 1;
    text-decoration: none;
    transition: transform 0.3s ease;
  }

  .toggle:hover {
    transform: scale(1.1);
  }

  .icon {
    grid-column: 1 / 1;
    grid-row: 1 / 1;
    line-height: 0;
  }

  .icon--moon {
    color: #282828;
  }

  .icon--sun {
    color: #fbbf24;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .nav-list {
      gap: 1.5rem;
      flex-wrap: wrap;
    }

    .nav-link {
      font-size: 0.9rem;
    }

    .nav-controls {
      gap: 1rem;
    }
  }

  @media (max-width: 480px) {
    .nav-controls {
      gap: 0.5rem;
    }

    .toggle {
      transform: scale(0.8);
    }
  }
</style>

<script>
  function smoothScrollTo(targetPosition, duration = 1000) {
    const startPosition = window.pageYOffset;
    const distance = targetPosition - startPosition;
    let startTime = null;

    function animation(currentTime) {
      if (startTime === null) startTime = currentTime;
      const timeElapsed = currentTime - startTime;
      const progress = Math.min(timeElapsed / duration, 1);

      const ease =
        progress < 0.5
          ? 2 * progress * progress
          : 1 - Math.pow(-2 * progress + 2, 2) / 2;

      window.scrollTo(0, startPosition + distance * ease);

      if (timeElapsed < duration) {
        requestAnimationFrame(animation);
      }
    }

    requestAnimationFrame(animation);
  }

  window.addEventListener("load", () => {
    const navLinks = document.querySelectorAll('a[href^="#"]');

    navLinks.forEach((link) => {
      link.addEventListener("click", function (e) {
        e.preventDefault();
        e.stopPropagation();

        const targetId = this.getAttribute("href");
        const targetSection = document.querySelector(targetId);

        if (targetSection) {
          const headerHeight = 100;
          const elementPosition = targetSection.getBoundingClientRect().top;
          const offsetPosition =
            elementPosition + window.pageYOffset - headerHeight;

          smoothScrollTo(offsetPosition, 800);
        }
      });
    });
  });
</script>