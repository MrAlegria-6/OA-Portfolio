---

---
<canvas id="starfield-canvas"></canvas>

<style>
  #starfield-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    pointer-events: none;
  }
</style>

<script>
  class Stars {
    constructor(args = {}) {
      this.stars = [];
      this.vel = args.vel || 0.2
      this.radius = args.radius || 0.5
      this.alpha = 0.2
      this.starsCounter = args.stars || 5
      this.canvas = null;
      this.context = null;
      this.center = {
        x: window.innerWidth /1,
        y: window.innerHeight / 2
      };
      
      this.init();
    }

    init() {
      this.canvas = document.getElementById('starfield-canvas');
      if (!this.canvas) return;
      
      this.context = this.canvas.getContext('2d');
      this.context.lineCap = 'round';
      this.start();
      this.resize();
      
      window.addEventListener('resize', this.resize.bind(this));
      this.animate();
    }

    start() {
      this.stars = [];
      for (let i = 0; i < this.starsCounter; i++) {
        setTimeout(() => {
          this.stars.push(new Star(this));
        }, i * 30);
      }
    }

    resize() {
      if (!this.canvas) return;
      this.canvas.width = window.innerWidth;
      this.canvas.height = window.innerHeight;
      this.center.x = this.canvas.width / 2;
      this.center.y = this.canvas.height / 2;
    }

    animate() {
      window.requestAnimationFrame(this.animate.bind(this));
      this.render();
    }

    render() {
      if (!this.context || !this.canvas) return;
      
      // Fondo negro con transparencia para efecto de estela
      this.context.fillStyle = 'rgba(56, 56, 56, 1)';
      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);
      
      // Color blanco semi-transparente para las estrellas
      this.context.strokeStyle = 'rgba(255, 255, 255, 1)';
      
      for (let i = 0; i < this.stars.length; i++) {
        this.stars[i].update();
      }
    }
  }

  class Star {
    constructor(parent) {
      this.parent = parent;
      this.x = 0;
      this.y = 0;
      this.x0 = 0;
      this.y0 = 0;
      this.radius = 0;
      this.lineWidth = 0;
      this.vel = { x: 0, y: 0 };
      this.init();
    }

    init() {
      this.radius = Math.random() * this.parent.radius;
      this.x = this.parent.center.x;
      this.y = this.parent.center.y;
      this.lineWidth = 0;
      this.vel = {
        x: Math.random() * 10 - 5,
        y: Math.random() * 10 - 5
      };
    }

    update() {
      this.vel.x *= 1.05;
      this.vel.y *= 1.05;
      this.lineWidth += 0.035;
      this.x0 = this.x;
      this.y0 = this.y;
      this.x += this.vel.x;
      this.y += this.vel.y;
      this.draw();
      
      if (this.isDead()) {
        this.init();
      }
    }

    draw() {
      if (!this.parent.context) return;
      
      this.parent.context.beginPath();
      this.parent.context.moveTo(this.x0, this.y0);
      this.parent.context.lineTo(this.x, this.y);
      this.parent.context.lineWidth = this.lineWidth;
      this.parent.context.stroke();
    }

    isDead() {
      if (!this.parent.canvas) return true;
      return (
        this.x < 0 || 
        this.x > this.parent.canvas.width || 
        this.y < 0 || 
        this.y > this.parent.canvas.height
      );
    }
  }

  // Inicializar cuando el DOM estÃ© listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new Stars({ stars: 50, radius: 0.8, vel: 0.1 });
    });
  } else {
    new Stars({ stars:50, radius: 0.8, vel: 0.1 });
  }
</script> 
