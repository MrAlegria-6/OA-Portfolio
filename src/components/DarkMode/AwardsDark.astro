---
// src/components/LogrosReconocimientos.astro
const logros = [
  {
    tipo: "Certification",
    titulo: "Microsoft Office Specialist: Excel Associate (microsoft 365 Apps)",
    organizacion: "Certiport",
    fecha: "2024",
    descripcion:
      "Certification about the basic and fundamental skills needed to create and manage worksheets and workbooks, create cells and ranges, create tables, apply formulas and functions, and create charts and objects.",
    icono: "üìó",
    color: "linear-gradient(135deg, #fbbf24 0%, #d97706 100%)",
  },
  {
    tipo: "Certification",
    titulo: "IT specialist - Python",
    organizacion: "Certiport",
    fecha: "2024",
    descripcion: "Certification about the fundamental skills needed to write and execute Python code, including knowledge of data types, control structures, functions, and error handling.",
    icono: "üêç",
    color: "background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%)",
  },
];

const categorias = ["All", "Certification", "Award", "Recognition"];
---

<section class="logros-section">
  <div class="logros-header">
    <h2 class="logros-title">Achievements and Recognitions</h2>
    <div class="divider"></div>
    <p class="logros-subtitle">
      Certifications, awards, and recognitions that validate my experience and
      professional dedication.
    </p>
  </div>

  <!-- Filtros -->
  <div class="filtros-container">
    {
      categorias.map((categoria) => (
        <button class="filtro-btn" data-filter={categoria.toLowerCase()}>
          {categoria}
        </button>
      ))
    }
  </div>

  <!-- Grid de Logros -->
  <div class="logros-grid">
    {
      logros.map((logro) => (
        <article class="logro-card" data-tipo={logro.tipo.toLowerCase()}>
          <div
            class="logro-badge"
            style={`background: ${logro.color}20; color: ${logro.color};`}
          >
            <span class="logro-icono">{logro.icono}</span>
            <span class="logro-tipo">{logro.tipo}</span>
          </div>

          <div class="logro-content">
            <h3 class="logro-titulo">{logro.titulo}</h3>
            <p class="logro-organizacion">{logro.organizacion}</p>
            <p class="logro-fecha">{logro.fecha}</p>

            <div class="logro-divider" />

            <p class="logro-descripcion">{logro.descripcion}</p>
          </div>

          <div class="logro-shine" />
        </article>
      ))
    }
  </div>

  <!-- Estad√≠sticas -->
  <div class="stats-container">
    <div class="stat-item">
      <span class="stat-number"
        >{logros.filter((l) => l.tipo === "Certification").length}</span
      >
      <span class="stat-label">Certifications</span>
    </div>
    <div class="stat-item">
      <span class="stat-number"
        >{logros.filter((l) => l.tipo === "Award").length}</span
      >
      <span class="stat-label">Awards</span>
    </div>
    <div class="stat-item">
      <span class="stat-number"
        >{logros.filter((l) => l.tipo === "Recognition").length}</span
      >
      <span class="stat-label">Recognitions</span>
    </div>
  </div>
</section>

<style>
  .logros-section {
    padding: 5rem 2rem;
    background: #383838;
    max-width: 2000px;
    margin: 0 auto;
  }

  .logros-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  .divider {
    height: 4px;
    width: 8rem;
    background: linear-gradient(90deg, #fbbf24, #d97706);
    margin: 1.5rem auto;
    border-radius: 9999px;
  }

  .logros-title {
    font-size: clamp(2.5rem, 5vw, 3.75rem);
    font-weight: 700;
    margin-bottom: 1rem;
    font-family: "K2D", sans-serif;
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .logros-subtitle {
    color: whitesmoke;
    font-size: 1.1rem;
    max-width: 700px;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Filtros */
  .filtros-container {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    margin-bottom: 2rem;
  }

  .filtro-btn {
    background:#282828;  
    border: none;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-size: 0.95rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: "K2D", sans-serif;
    display: inline-block;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    color: whitesmoke;
  }

  .filtro-btn:hover,
  .filtro-btn.active {
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    color: whitesmoke;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
  }

  /* Grid de Logros */
  .logros-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
  }

  .logro-card {
    background: #282828;
    border-radius: 16px;
    padding: 2rem;
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(102, 126, 234, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    color: whitesmoke;
  }

  .logro-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    transition: left 0.5s ease;
    z-index: 0;
  }

  .logro-card:hover::before {
    left: 100%;
  }

  .logro-card:hover {
    transform: translateY(-8px);
    border-color: rgba(102, 126, 234, 0.4);
    box-shadow:
      0 20px 40px rgba(0, 0, 0, 0.4),
      0 0 20px rgba(102, 126, 234, 0.2);
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    color: whitesmoke;
  }

  .logro-content {
    position: relative;
    z-index: 1;
  }

  .logro-card:hover .logro-titulo,
  .logro-card:hover .logro-organizacion,
  .logro-card:hover .logro-fecha,
  .logro-card:hover .logro-descripcion,
  .logro-card:hover .logro-tipo {
    color: white;
  }

  /* Badge */
  .logro-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-radius: 50px;
    font-size: 0.85rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    font-family: "K2D", sans-serif;
    position: relative;
    z-index: 1;
    transition: color 0.3s ease;
  }

  .logro-card:hover .logro-badge {
    color: white;
  }

  .logro-icono {
    font-size: 1.5rem;
  }

  .logro-tipo {
    text-transform: uppercase;
    letter-spacing: 0.5px;
    color: whitesmoke;
  }

  /* Contenido */
  .logro-titulo {
    color: whitesmoke;
    font-size: 1.35rem;
    font-weight: 700;
    margin: 0 0 0.75rem 0;
    line-height: 1.3;
    font-family: "K2D", sans-serif;
  }

  .logro-organizacion {
    color: whitesmoke;
    font-size: 1rem;
    font-weight: 500;
    margin: 0 0 0.5rem 0;
  }

  .logro-fecha {
    font-size: 0.9rem;
    font-weight: 600;
    margin: 0;
    color: whitesmoke;
  }

  .logro-divider {
    width: 50px;
    height: 3px;
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
    border-radius: 2px;
    margin: 1.25rem 0;
  }

  .logro-descripcion {
    color: whitesmoke;
    font-size: 0.95rem;
    line-height: 1.6;
    margin: 0;
  }

  /* Shine effect */
  .logro-shine {
    position: absolute;
    top: -50%;
    right: -50%;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.1) 0%,
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .logro-card:hover .logro-shine {
    opacity: 1;
  }

  .logro-card.hidden {
    display: none;
  }

  /* Estad√≠sticas */
  .stats-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 2rem;
    padding: 3rem;
    background: #282828;
    border-radius: 20px;
    border: 1px solid rgba(102, 126, 234, 0.2);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  }

  .stat-item {
    text-align: center;
    padding: 1.5rem;
    background: #383838; 
    border-radius: 12px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    color: #282828;
  }

  .stat-item:hover {
    transform: translateY(-4px);
    background: linear-gradient(135deg, #fbbf24 0%, #d97706 100%);
  }

  .stat-number {
    display: block;
    font-size: 3rem;
    font-weight: 700;
    line-height: 1;
    margin-bottom: 0.5rem;
    background-clip: text;
    font-family: "K2D", sans-serif;
    color: whitesmoke;
  }

  .stat-item:hover .stat-number,
  .stat-item:hover .stat-label {
    color: white;
  }

  .stat-label {
    color: whitesmoke;
    font-size: 0.95rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .logros-section {
      padding: 3rem 1rem;
    }

    .logros-title {
      font-size: 1.75rem;
    }

    .logros-subtitle {
      font-size: 0.95rem;
    }

    .logros-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .filtros-container {
      gap: 0.5rem;
    }

    .filtro-btn {
      padding: 0.6rem 1.2rem;
      font-size: 0.85rem;
    }

    .stats-container {
      grid-template-columns: repeat(2, 1fr);
      padding: 2rem 1rem;
      gap: 1rem;
    }

    .stat-number {
      font-size: 2rem;
    }
  }

  @media (max-width: 480px) {
    .stats-container {
      grid-template-columns: 1fr;
    }
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const filters = document.querySelectorAll(".filtro-btn");
    const cards = document.querySelectorAll(".logro-card");

    // ‚úÖ Set the first filter (All) as active by default
    filters[0]?.classList.add("active");

    filters.forEach((filter) => {
      filter.addEventListener("click", () => {
        // Remove active state from all filters
        filters.forEach((f) => f.classList.remove("active"));

        // Add active to the clicked filter
        filter.classList.add("active");

        const filterValue = filter.getAttribute("data-filter").toLowerCase();

        cards.forEach((card) => {
          const cardType = card.getAttribute("data-tipo").toLowerCase();

          if (filterValue === "all") {
            // Show all cards
            card.classList.remove("hidden");
            setTimeout(() => {
              card.style.opacity = "1";
              card.style.transform = "scale(1)";
            }, 10);
          } else {
            // Show only cards that match the filter
            if (cardType === filterValue) {
              card.classList.remove("hidden");
              setTimeout(() => {
                card.style.opacity = "1";
                card.style.transform = "scale(1)";
              }, 10);
            } else {
              card.style.opacity = "0";
              card.style.transform = "scale(0.9)";
              setTimeout(() => {
                card.classList.add("hidden");
              }, 300);
            }
          }
        });
      });
    });

    // ‚ú® Initial entry animation
    cards.forEach((card, index) => {
      card.style.opacity = "0";
      card.style.transform = "translateY(20px)";

      setTimeout(() => {
        card.style.transition = "all 0.4s ease";
        card.style.opacity = "1";
        card.style.transform = "translateY(0)";
      }, index * 100);
    });
  });
</script>
